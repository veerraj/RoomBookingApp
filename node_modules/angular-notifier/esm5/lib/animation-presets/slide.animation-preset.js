/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ɵ0 = /**
 * @param {?} notification
 * @return {?}
 */
function (notification) {
    // Prepare variables
    /** @type {?} */
    var config = notification.component.getConfig();
    /** @type {?} */
    var shift = notification.component.getShift();
    /** @type {?} */
    var from;
    /** @type {?} */
    var to;
    // Configure variables, depending on configuration and component
    if (config.position.horizontal.position === 'left') {
        from = {
            transform: "translate3d( 0, " + shift + "px, 0 )"
        };
        to = {
            transform: "translate3d( calc( -100% - " + config.position.horizontal.distance + "px - 10px ), " + shift + "px, 0 )"
        };
    }
    else if (config.position.horizontal.position === 'right') {
        from = {
            transform: "translate3d( 0, " + shift + "px, 0 )"
        };
        to = {
            transform: "translate3d( calc( 100% + " + config.position.horizontal.distance + "px + 10px ), " + shift + "px, 0 )"
        };
    }
    else {
        /** @type {?} */
        var horizontalPosition = void 0;
        if (config.position.vertical.position === 'top') {
            horizontalPosition = "calc( -100% - " + config.position.horizontal.distance + "px - 10px )";
        }
        else {
            horizontalPosition = "calc( 100% + " + config.position.horizontal.distance + "px + 10px )";
        }
        from = {
            transform: "translate3d( -50%, " + shift + "px, 0 )"
        };
        to = {
            transform: "translate3d( -50%, " + horizontalPosition + ", 0 )"
        };
    }
    // Done
    return {
        from: from,
        to: to
    };
}, ɵ1 = /**
 * @param {?} notification
 * @return {?}
 */
function (notification) {
    // Prepare variables
    /** @type {?} */
    var config = notification.component.getConfig();
    /** @type {?} */
    var from;
    /** @type {?} */
    var to;
    // Configure variables, depending on configuration and component
    if (config.position.horizontal.position === 'left') {
        from = {
            transform: "translate3d( calc( -100% - " + config.position.horizontal.distance + "px - 10px ), 0, 0 )"
        };
        to = {
            transform: 'translate3d( 0, 0, 0 )'
        };
    }
    else if (config.position.horizontal.position === 'right') {
        from = {
            transform: "translate3d( calc( 100% + " + config.position.horizontal.distance + "px + 10px ), 0, 0 )"
        };
        to = {
            transform: 'translate3d( 0, 0, 0 )'
        };
    }
    else {
        /** @type {?} */
        var horizontalPosition = void 0;
        if (config.position.vertical.position === 'top') {
            horizontalPosition = "calc( -100% - " + config.position.horizontal.distance + "px - 10px )";
        }
        else {
            horizontalPosition = "calc( 100% + " + config.position.horizontal.distance + "px + 10px )";
        }
        from = {
            transform: "translate3d( -50%, " + horizontalPosition + ", 0 )"
        };
        to = {
            transform: 'translate3d( -50%, 0, 0 )'
        };
    }
    // Done
    return {
        from: from,
        to: to
    };
};
/**
 * Slide animation preset
 * @type {?}
 */
export var slide = {
    hide: (ɵ0),
    show: (ɵ1)
};
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUuYW5pbWF0aW9uLXByZXNldC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItbm90aWZpZXIvIiwic291cmNlcyI6WyJsaWIvYW5pbWF0aW9uLXByZXNldHMvc2xpZGUuYW5pbWF0aW9uLXByZXNldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQVFPLFVBQUUsWUFBa0M7OztRQUduQyxNQUFNLEdBQW1CLFlBQVksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFOztRQUMzRCxLQUFLLEdBQVcsWUFBWSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUU7O1FBQ25ELElBRUg7O1FBQ0csRUFFSDtJQUVELGdFQUFnRTtJQUNoRSxJQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsS0FBSyxNQUFNLEVBQUc7UUFDckQsSUFBSSxHQUFHO1lBQ04sU0FBUyxFQUFFLHFCQUFvQixLQUFLLFlBQVU7U0FDOUMsQ0FBQztRQUNGLEVBQUUsR0FBRztZQUNKLFNBQVMsRUFBRSxnQ0FBK0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsUUFBUSxxQkFBa0IsS0FBSyxZQUFVO1NBQzlHLENBQUM7S0FDRjtTQUFNLElBQUssTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsUUFBUSxLQUFLLE9BQU8sRUFBRztRQUM3RCxJQUFJLEdBQUc7WUFDTixTQUFTLEVBQUUscUJBQW9CLEtBQUssWUFBVTtTQUM5QyxDQUFDO1FBQ0YsRUFBRSxHQUFHO1lBQ0osU0FBUyxFQUFFLCtCQUE4QixNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxRQUFRLHFCQUFrQixLQUFLLFlBQVU7U0FDN0csQ0FBQztLQUNGO1NBQU07O1lBQ0Ysa0JBQWtCLFNBQVE7UUFDOUIsSUFBSyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEtBQUssS0FBSyxFQUFHO1lBQ2xELGtCQUFrQixHQUFHLG1CQUFrQixNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxRQUFRLGdCQUFjLENBQUM7U0FDekY7YUFBTTtZQUNOLGtCQUFrQixHQUFHLGtCQUFpQixNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxRQUFRLGdCQUFjLENBQUM7U0FDeEY7UUFDRCxJQUFJLEdBQUc7WUFDTixTQUFTLEVBQUUsd0JBQXVCLEtBQUssWUFBVTtTQUNqRCxDQUFDO1FBQ0YsRUFBRSxHQUFHO1lBQ0osU0FBUyxFQUFFLHdCQUF1QixrQkFBa0IsVUFBUTtTQUM1RCxDQUFDO0tBQ0Y7SUFFRCxPQUFPO0lBQ1AsT0FBTztRQUNOLElBQUksTUFBQTtRQUNKLEVBQUUsSUFBQTtLQUNGLENBQUM7QUFFSCxDQUFDOzs7O0FBQ0ssVUFBRSxZQUFrQzs7O1FBR25DLE1BQU0sR0FBbUIsWUFBWSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUU7O1FBQzdELElBRUg7O1FBQ0csRUFFSDtJQUVELGdFQUFnRTtJQUNoRSxJQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsS0FBSyxNQUFNLEVBQUc7UUFDckQsSUFBSSxHQUFHO1lBQ04sU0FBUyxFQUFFLGdDQUErQixNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxRQUFRLHdCQUFzQjtTQUNuRyxDQUFDO1FBQ0YsRUFBRSxHQUFHO1lBQ0osU0FBUyxFQUFFLHdCQUF3QjtTQUNuQyxDQUFDO0tBQ0Y7U0FBTSxJQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsS0FBSyxPQUFPLEVBQUc7UUFDN0QsSUFBSSxHQUFHO1lBQ04sU0FBUyxFQUFFLCtCQUE4QixNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxRQUFRLHdCQUFzQjtTQUNsRyxDQUFDO1FBQ0YsRUFBRSxHQUFHO1lBQ0osU0FBUyxFQUFFLHdCQUF3QjtTQUNuQyxDQUFDO0tBQ0Y7U0FBTTs7WUFDRixrQkFBa0IsU0FBUTtRQUM5QixJQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsS0FBSyxLQUFLLEVBQUc7WUFDbEQsa0JBQWtCLEdBQUcsbUJBQWtCLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsZ0JBQWMsQ0FBQztTQUN6RjthQUFNO1lBQ04sa0JBQWtCLEdBQUcsa0JBQWlCLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsZ0JBQWMsQ0FBQztTQUN4RjtRQUNELElBQUksR0FBRztZQUNOLFNBQVMsRUFBRSx3QkFBdUIsa0JBQWtCLFVBQVE7U0FDNUQsQ0FBQztRQUNGLEVBQUUsR0FBRztZQUNKLFNBQVMsRUFBRSwyQkFBMkI7U0FDdEMsQ0FBQztLQUNGO0lBRUQsT0FBTztJQUNQLE9BQU87UUFDTixJQUFJLE1BQUE7UUFDSixFQUFFLElBQUE7S0FDRixDQUFDO0FBRUgsQ0FBQzs7Ozs7QUFqR0YsTUFBTSxLQUFPLEtBQUssR0FBNEI7SUFDN0MsSUFBSSxNQWdESDtJQUNELElBQUksTUErQ0g7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vdGlmaWVyQW5pbWF0aW9uUHJlc2V0LCBOb3RpZmllckFuaW1hdGlvblByZXNldEtleWZyYW1lcyB9IGZyb20gJy4uL21vZGVscy9ub3RpZmllci1hbmltYXRpb24ubW9kZWwnO1xuaW1wb3J0IHsgTm90aWZpZXJDb25maWcgfSBmcm9tICcuLi9tb2RlbHMvbm90aWZpZXItY29uZmlnLm1vZGVsJztcbmltcG9ydCB7IE5vdGlmaWVyTm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vbW9kZWxzL25vdGlmaWVyLW5vdGlmaWNhdGlvbi5tb2RlbCc7XG5cbi8qKlxuICogU2xpZGUgYW5pbWF0aW9uIHByZXNldFxuICovXG5leHBvcnQgY29uc3Qgc2xpZGU6IE5vdGlmaWVyQW5pbWF0aW9uUHJlc2V0ID0ge1xuXHRoaWRlOiAoIG5vdGlmaWNhdGlvbjogTm90aWZpZXJOb3RpZmljYXRpb24gKTogTm90aWZpZXJBbmltYXRpb25QcmVzZXRLZXlmcmFtZXMgPT4ge1xuXG5cdFx0Ly8gUHJlcGFyZSB2YXJpYWJsZXNcblx0XHRjb25zdCBjb25maWc6IE5vdGlmaWVyQ29uZmlnID0gbm90aWZpY2F0aW9uLmNvbXBvbmVudC5nZXRDb25maWcoKTtcblx0XHRjb25zdCBzaGlmdDogbnVtYmVyID0gbm90aWZpY2F0aW9uLmNvbXBvbmVudC5nZXRTaGlmdCgpO1xuXHRcdGxldCBmcm9tOiB7XG5cdFx0XHRbIGFuaW1hdGFibGVQcm9wZXJ0eU5hbWU6IHN0cmluZyBdOiBzdHJpbmc7XG5cdFx0fTtcblx0XHRsZXQgdG86IHtcblx0XHRcdFsgYW5pbWF0YWJsZVByb3BlcnR5TmFtZTogc3RyaW5nIF06IHN0cmluZztcblx0XHR9O1xuXG5cdFx0Ly8gQ29uZmlndXJlIHZhcmlhYmxlcywgZGVwZW5kaW5nIG9uIGNvbmZpZ3VyYXRpb24gYW5kIGNvbXBvbmVudFxuXHRcdGlmICggY29uZmlnLnBvc2l0aW9uLmhvcml6b250YWwucG9zaXRpb24gPT09ICdsZWZ0JyApIHtcblx0XHRcdGZyb20gPSB7XG5cdFx0XHRcdHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCAwLCAkeyBzaGlmdCB9cHgsIDAgKWBcblx0XHRcdH07XG5cdFx0XHR0byA9IHtcblx0XHRcdFx0dHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoIGNhbGMoIC0xMDAlIC0gJHsgY29uZmlnLnBvc2l0aW9uLmhvcml6b250YWwuZGlzdGFuY2UgfXB4IC0gMTBweCApLCAkeyBzaGlmdCB9cHgsIDAgKWBcblx0XHRcdH07XG5cdFx0fSBlbHNlIGlmICggY29uZmlnLnBvc2l0aW9uLmhvcml6b250YWwucG9zaXRpb24gPT09ICdyaWdodCcgKSB7XG5cdFx0XHRmcm9tID0ge1xuXHRcdFx0XHR0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCggMCwgJHsgc2hpZnQgfXB4LCAwIClgXG5cdFx0XHR9O1xuXHRcdFx0dG8gPSB7XG5cdFx0XHRcdHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCBjYWxjKCAxMDAlICsgJHsgY29uZmlnLnBvc2l0aW9uLmhvcml6b250YWwuZGlzdGFuY2UgfXB4ICsgMTBweCApLCAkeyBzaGlmdCB9cHgsIDAgKWBcblx0XHRcdH07XG5cdFx0fSBlbHNlIHtcblx0XHRcdGxldCBob3Jpem9udGFsUG9zaXRpb246IHN0cmluZztcblx0XHRcdGlmICggY29uZmlnLnBvc2l0aW9uLnZlcnRpY2FsLnBvc2l0aW9uID09PSAndG9wJyApIHtcblx0XHRcdFx0aG9yaXpvbnRhbFBvc2l0aW9uID0gYGNhbGMoIC0xMDAlIC0gJHsgY29uZmlnLnBvc2l0aW9uLmhvcml6b250YWwuZGlzdGFuY2UgfXB4IC0gMTBweCApYDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGhvcml6b250YWxQb3NpdGlvbiA9IGBjYWxjKCAxMDAlICsgJHsgY29uZmlnLnBvc2l0aW9uLmhvcml6b250YWwuZGlzdGFuY2UgfXB4ICsgMTBweCApYDtcblx0XHRcdH1cblx0XHRcdGZyb20gPSB7XG5cdFx0XHRcdHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCAtNTAlLCAkeyBzaGlmdCB9cHgsIDAgKWBcblx0XHRcdH07XG5cdFx0XHR0byA9IHtcblx0XHRcdFx0dHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoIC01MCUsICR7IGhvcml6b250YWxQb3NpdGlvbiB9LCAwIClgXG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIERvbmVcblx0XHRyZXR1cm4ge1xuXHRcdFx0ZnJvbSxcblx0XHRcdHRvXG5cdFx0fTtcblxuXHR9LFxuXHRzaG93OiAoIG5vdGlmaWNhdGlvbjogTm90aWZpZXJOb3RpZmljYXRpb24gKTogTm90aWZpZXJBbmltYXRpb25QcmVzZXRLZXlmcmFtZXMgPT4ge1xuXG5cdFx0Ly8gUHJlcGFyZSB2YXJpYWJsZXNcblx0XHRjb25zdCBjb25maWc6IE5vdGlmaWVyQ29uZmlnID0gbm90aWZpY2F0aW9uLmNvbXBvbmVudC5nZXRDb25maWcoKTtcblx0XHRsZXQgZnJvbToge1xuXHRcdFx0WyBhbmltYXRhYmxlUHJvcGVydHlOYW1lOiBzdHJpbmcgXTogc3RyaW5nO1xuXHRcdH07XG5cdFx0bGV0IHRvOiB7XG5cdFx0XHRbIGFuaW1hdGFibGVQcm9wZXJ0eU5hbWU6IHN0cmluZyBdOiBzdHJpbmc7XG5cdFx0fTtcblxuXHRcdC8vIENvbmZpZ3VyZSB2YXJpYWJsZXMsIGRlcGVuZGluZyBvbiBjb25maWd1cmF0aW9uIGFuZCBjb21wb25lbnRcblx0XHRpZiAoIGNvbmZpZy5wb3NpdGlvbi5ob3Jpem9udGFsLnBvc2l0aW9uID09PSAnbGVmdCcgKSB7XG5cdFx0XHRmcm9tID0ge1xuXHRcdFx0XHR0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCggY2FsYyggLTEwMCUgLSAkeyBjb25maWcucG9zaXRpb24uaG9yaXpvbnRhbC5kaXN0YW5jZSB9cHggLSAxMHB4ICksIDAsIDAgKWBcblx0XHRcdH07XG5cdFx0XHR0byA9IHtcblx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoIDAsIDAsIDAgKSdcblx0XHRcdH07XG5cdFx0fSBlbHNlIGlmICggY29uZmlnLnBvc2l0aW9uLmhvcml6b250YWwucG9zaXRpb24gPT09ICdyaWdodCcgKSB7XG5cdFx0XHRmcm9tID0ge1xuXHRcdFx0XHR0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCggY2FsYyggMTAwJSArICR7IGNvbmZpZy5wb3NpdGlvbi5ob3Jpem9udGFsLmRpc3RhbmNlIH1weCArIDEwcHggKSwgMCwgMCApYFxuXHRcdFx0fTtcblx0XHRcdHRvID0ge1xuXHRcdFx0XHR0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCggMCwgMCwgMCApJ1xuXHRcdFx0fTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGV0IGhvcml6b250YWxQb3NpdGlvbjogc3RyaW5nO1xuXHRcdFx0aWYgKCBjb25maWcucG9zaXRpb24udmVydGljYWwucG9zaXRpb24gPT09ICd0b3AnICkge1xuXHRcdFx0XHRob3Jpem9udGFsUG9zaXRpb24gPSBgY2FsYyggLTEwMCUgLSAkeyBjb25maWcucG9zaXRpb24uaG9yaXpvbnRhbC5kaXN0YW5jZSB9cHggLSAxMHB4IClgO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aG9yaXpvbnRhbFBvc2l0aW9uID0gYGNhbGMoIDEwMCUgKyAkeyBjb25maWcucG9zaXRpb24uaG9yaXpvbnRhbC5kaXN0YW5jZSB9cHggKyAxMHB4IClgO1xuXHRcdFx0fVxuXHRcdFx0ZnJvbSA9IHtcblx0XHRcdFx0dHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoIC01MCUsICR7IGhvcml6b250YWxQb3NpdGlvbiB9LCAwIClgXG5cdFx0XHR9O1xuXHRcdFx0dG8gPSB7XG5cdFx0XHRcdHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKCAtNTAlLCAwLCAwICknXG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIERvbmVcblx0XHRyZXR1cm4ge1xuXHRcdFx0ZnJvbSxcblx0XHRcdHRvXG5cdFx0fTtcblxuXHR9XG59O1xuIl19