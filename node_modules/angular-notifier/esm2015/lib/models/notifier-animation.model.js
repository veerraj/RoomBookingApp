/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Notifier animation data
 *
 * This interface describes an object containing all information necessary to run an animation, in particular to run an animation with the
 * all new (shiny) Web Animations API. When other components or services request data for an animation they have to run, this is the object
 * they get back from the animation service.
 *
 * Technical sidenote:
 * Nope, it's not a coincidence - the structure looks similar to the Web Animation API syntax.
 * @record
 */
export function NotifierAnimationData() { }
if (false) {
    /**
     * Animation keyframes; the first index ctonaining changes for animate-in, the second index those for animate-out
     * @type {?}
     */
    NotifierAnimationData.prototype.keyframes;
    /**
     * Futher animation options
     * @type {?}
     */
    NotifierAnimationData.prototype.options;
}
/**
 * Notifier animation preset
 *
 * This interface describes the structure of an animation preset, defining the keyframes for both animating-in and animating-out. Animation
 * presets are always defined outside the animation service, and therefore one day may become part of some new API.
 * @record
 */
export function NotifierAnimationPreset() { }
if (false) {
    /**
     * Function generating the keyframes for animating-out
     * @type {?}
     */
    NotifierAnimationPreset.prototype.hide;
    /**
     * Function generating the keyframes for animating-in
     * @type {?}
     */
    NotifierAnimationPreset.prototype.show;
}
/**
 * Notifier animation keyframes
 *
 * This interface describes the data, in particular all the keyframes animation presets return.
 * @record
 */
export function NotifierAnimationPresetKeyframes() { }
if (false) {
    /**
     * CSS attributes before the animation starts
     * @type {?}
     */
    NotifierAnimationPresetKeyframes.prototype.from;
    /**
     * CSS attributes after the animation ends
     * @type {?}
     */
    NotifierAnimationPresetKeyframes.prototype.to;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpZXItYW5pbWF0aW9uLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1ub3RpZmllci8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbHMvbm90aWZpZXItYW5pbWF0aW9uLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQVlBLDJDQStCQzs7Ozs7O0lBMUJBLDBDQUVHOzs7OztJQUtILHdDQWlCRTs7Ozs7Ozs7O0FBVUgsNkNBWUM7Ozs7OztJQVBBLHVDQUFpRjs7Ozs7SUFLakYsdUNBQWlGOzs7Ozs7OztBQVNsRixzREFnQkM7Ozs7OztJQVhBLGdEQUVFOzs7OztJQUtGLDhDQUVFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTm90aWZpZXJOb3RpZmljYXRpb24gfSBmcm9tICcuL25vdGlmaWVyLW5vdGlmaWNhdGlvbi5tb2RlbCc7XG5cbi8qKlxuICogTm90aWZpZXIgYW5pbWF0aW9uIGRhdGFcbiAqXG4gKiBUaGlzIGludGVyZmFjZSBkZXNjcmliZXMgYW4gb2JqZWN0IGNvbnRhaW5pbmcgYWxsIGluZm9ybWF0aW9uIG5lY2Vzc2FyeSB0byBydW4gYW4gYW5pbWF0aW9uLCBpbiBwYXJ0aWN1bGFyIHRvIHJ1biBhbiBhbmltYXRpb24gd2l0aCB0aGVcbiAqIGFsbCBuZXcgKHNoaW55KSBXZWIgQW5pbWF0aW9ucyBBUEkuIFdoZW4gb3RoZXIgY29tcG9uZW50cyBvciBzZXJ2aWNlcyByZXF1ZXN0IGRhdGEgZm9yIGFuIGFuaW1hdGlvbiB0aGV5IGhhdmUgdG8gcnVuLCB0aGlzIGlzIHRoZSBvYmplY3RcbiAqIHRoZXkgZ2V0IGJhY2sgZnJvbSB0aGUgYW5pbWF0aW9uIHNlcnZpY2UuXG4gKlxuICogVGVjaG5pY2FsIHNpZGVub3RlOlxuICogTm9wZSwgaXQncyBub3QgYSBjb2luY2lkZW5jZSAtIHRoZSBzdHJ1Y3R1cmUgbG9va3Mgc2ltaWxhciB0byB0aGUgV2ViIEFuaW1hdGlvbiBBUEkgc3ludGF4LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIE5vdGlmaWVyQW5pbWF0aW9uRGF0YSB7XG5cblx0LyoqXG5cdCAqIEFuaW1hdGlvbiBrZXlmcmFtZXM7IHRoZSBmaXJzdCBpbmRleCBjdG9uYWluaW5nIGNoYW5nZXMgZm9yIGFuaW1hdGUtaW4sIHRoZSBzZWNvbmQgaW5kZXggdGhvc2UgZm9yIGFuaW1hdGUtb3V0XG5cdCAqL1xuXHRrZXlmcmFtZXM6IEFycmF5PHtcblx0XHRbIGFuaW1hdGFibGVQcm9wZXJ0eU5hbWU6IHN0cmluZyBdOiBzdHJpbmc7XG5cdH0+O1xuXG5cdC8qKlxuXHQgKiBGdXRoZXIgYW5pbWF0aW9uIG9wdGlvbnNcblx0ICovXG5cdG9wdGlvbnM6IHtcblxuXHRcdC8qKlxuXHRcdCAqIEFuaW1hdGlvbiBkdXJhdGlvbiwgaW4gbXNcblx0XHQgKi9cblx0XHRkdXJhdGlvbjogbnVtYmVyO1xuXG5cdFx0LyoqXG5cdFx0ICogQW5pbWF0aW9uIGVhc2luZyBmdW5jdGlvbiAoY29tcC4gQ1NTIGVhc2luZyBmdW5jdGlvbnMpXG5cdFx0ICovXG5cdFx0ZWFzaW5nPzogJ2xpbmVhcicgfCAnZWFzZScgfCAnZWFzZS1pbicgfCAnZWFzZS1vdXQnIHwgJ2Vhc2UtaW4tb3V0JyB8IHN0cmluZztcblxuXHRcdC8qKlxuXHRcdCAqIEFuaW1hdGlvbiBmaWxsIG1vZGVcblx0XHQgKi9cblx0XHRmaWxsOiAnbm9uZScgfCAnZm9yd2FyZHMnIHwgJ2JhY2t3YXJkcyc7XG5cblx0fTtcblxufVxuXG4vKipcbiAqIE5vdGlmaWVyIGFuaW1hdGlvbiBwcmVzZXRcbiAqXG4gKiBUaGlzIGludGVyZmFjZSBkZXNjcmliZXMgdGhlIHN0cnVjdHVyZSBvZiBhbiBhbmltYXRpb24gcHJlc2V0LCBkZWZpbmluZyB0aGUga2V5ZnJhbWVzIGZvciBib3RoIGFuaW1hdGluZy1pbiBhbmQgYW5pbWF0aW5nLW91dC4gQW5pbWF0aW9uXG4gKiBwcmVzZXRzIGFyZSBhbHdheXMgZGVmaW5lZCBvdXRzaWRlIHRoZSBhbmltYXRpb24gc2VydmljZSwgYW5kIHRoZXJlZm9yZSBvbmUgZGF5IG1heSBiZWNvbWUgcGFydCBvZiBzb21lIG5ldyBBUEkuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTm90aWZpZXJBbmltYXRpb25QcmVzZXQge1xuXG5cdC8qKlxuXHQgKiBGdW5jdGlvbiBnZW5lcmF0aW5nIHRoZSBrZXlmcmFtZXMgZm9yIGFuaW1hdGluZy1vdXRcblx0ICovXG5cdGhpZGU6ICggbm90aWZpY2F0aW9uOiBOb3RpZmllck5vdGlmaWNhdGlvbiApID0+IE5vdGlmaWVyQW5pbWF0aW9uUHJlc2V0S2V5ZnJhbWVzO1xuXG5cdC8qKlxuXHQgKiBGdW5jdGlvbiBnZW5lcmF0aW5nIHRoZSBrZXlmcmFtZXMgZm9yIGFuaW1hdGluZy1pblxuXHQgKi9cblx0c2hvdzogKCBub3RpZmljYXRpb246IE5vdGlmaWVyTm90aWZpY2F0aW9uICkgPT4gTm90aWZpZXJBbmltYXRpb25QcmVzZXRLZXlmcmFtZXM7XG5cbn1cblxuLyoqXG4gKiBOb3RpZmllciBhbmltYXRpb24ga2V5ZnJhbWVzXG4gKlxuICogVGhpcyBpbnRlcmZhY2UgZGVzY3JpYmVzIHRoZSBkYXRhLCBpbiBwYXJ0aWN1bGFyIGFsbCB0aGUga2V5ZnJhbWVzIGFuaW1hdGlvbiBwcmVzZXRzIHJldHVybi5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBOb3RpZmllckFuaW1hdGlvblByZXNldEtleWZyYW1lcyB7XG5cblx0LyoqXG5cdCAqIENTUyBhdHRyaWJ1dGVzIGJlZm9yZSB0aGUgYW5pbWF0aW9uIHN0YXJ0c1xuXHQgKi9cblx0ZnJvbToge1xuXHRcdFsgYW5pbWF0YWJsZVByb3BlcnR5TmFtZTogc3RyaW5nIF06IHN0cmluZztcblx0fTtcblxuXHQvKipcblx0ICogQ1NTIGF0dHJpYnV0ZXMgYWZ0ZXIgdGhlIGFuaW1hdGlvbiBlbmRzXG5cdCAqL1xuXHR0bzoge1xuXHRcdFsgYW5pbWF0YWJsZVByb3BlcnR5TmFtZTogc3RyaW5nIF06IHN0cmluZztcblx0fTtcblxufVxuIl19